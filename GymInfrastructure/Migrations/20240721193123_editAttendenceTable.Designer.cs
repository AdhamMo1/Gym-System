// <auto-generated />
using System;
using GymInfrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GymInfrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240721193123_editAttendenceTable")]
    partial class editAttendenceTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GymCore.Entities.Attendence", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("AttendedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("TraineeId")
                        .HasMaxLength(50)
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TraineeId");

                    b.ToTable("Attendence");
                });

            modelBuilder.Entity("GymCore.Entities.SubscriptionCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("DurationByDay")
                        .HasColumnType("int");

                    b.Property<int?>("DurationByMonth")
                        .HasColumnType("int");

                    b.Property<int?>("DurationByYear")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("SubscriptionCategory");
                });

            modelBuilder.Entity("GymCore.Entities.Trainee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AddedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DaysRemain")
                        .HasColumnType("int");

                    b.Property<string>("Gender")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int?>("MonthsRemain")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid>("SCId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SCId");

                    b.ToTable("Trainees");
                });

            modelBuilder.Entity("GymCore.Entities.Attendence", b =>
                {
                    b.HasOne("GymCore.Entities.Trainee", "Trainee")
                        .WithMany("Attendences")
                        .HasForeignKey("TraineeId");

                    b.Navigation("Trainee");
                });

            modelBuilder.Entity("GymCore.Entities.Trainee", b =>
                {
                    b.HasOne("GymCore.Entities.SubscriptionCategory", "subscriptionCategory")
                        .WithMany()
                        .HasForeignKey("SCId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("subscriptionCategory");
                });

            modelBuilder.Entity("GymCore.Entities.Trainee", b =>
                {
                    b.Navigation("Attendences");
                });
#pragma warning restore 612, 618
        }
    }
}
